# Lines configured by zsh-newuser-install
export HISTFILE=~/.histfile
export HISTSIZE=10000
export SAVEHIST=10000
setopt autocd nomatch
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/alex/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

eval "$(zoxide init zsh --cmd cd)"
eval "$(starship init zsh)"
if command -v nixos-version >/dev/null; then
else
    eval "$(pyenv init -)"
    source /usr/share/nvm/init-nvm.sh
fi
if [ -f /etc/profile.d/debuginfod.sh ]; then
    source /etc/profile.d/debuginfod.sh
fi
autoload -U edit-command-line
zle -N edit-command-line

export GPG_TTY=$(tty)
export EDITOR="code -w"
export DIRENV_LOG_FORMAT=

bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word

alias bell='echo -e "\a"'
alias pbcopy=wl-copy
alias pbpaste=wl-paste
alias please='sudo $(fc -ln -1)'
alias open=xdg-open
alias dotfiles='git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
alias vg="valgrind --leak-check=full --track-origins=yes --show-reachable=yes"
alias ls=eza
alias ll="eza -l"
alias jodie=yarn
alias config='pushd ~/.config;nvim;popd'
alias zshrc='nvim ~/.zshrc'
alias nix-s="nix-shell --run $SHELL -p"
mklatex() {
    if [ -z "$1" ]; then
        echo "Usage: mklatex <filename>"
        return 1
    fi
    local filename="$1"
    latexmk -pdf -halt-on-error "$filename" && latexmk -c "$filename"
}
split() {
    local escaped
    escaped=$(printf '%q ' "$@")
    hyprctl dispatch exec "alacritty --working-directory $(pwd) -e sh -c \"$escaped\""
}
bindkey '^xe' edit-command-line
bindkey '^x^e' edit-command-line

if [ -d "$HOME/.atuin" ]; then
    . "$HOME/.atuin/bin/env"
fi

eval "$(direnv hook zsh)"

nixify() {
    if [ ! -e ./.envrc ]; then
        echo "use nix" >.envrc
        direnv allow
    fi
    if [[ ! -e shell.nix ]] && [[ ! -e default.nix ]]; then
        cat >default.nix <<'EOF'
with import <nixpkgs> {};
mkShell {
  nativeBuildInputs = [
    bashInteractive
  ];
}
EOF
    fi
}
flakify() {
    if [ ! -e flake.nix ]; then
        nix flake new -t github:nix-community/nix-direnv .
    elif [ ! -e .envrc ]; then
        echo "use flake" >.envrc
        direnv allow
    fi
}

a() {
    unalias -m psql up ssh install is stan stan-b cs cbf newbase tobase worker 2>/dev/null
    # automatically set alias based on pwd
    case "$PWD" in
    "/home/alex/Documents/Programming/Submitty/Submitty"*)
        alias psql='split PGPASSWORD=submitty_dbuser psql -U submitty_dbuser -h localhost -p 16442 submitty_s25_sample'
        alias up='vagrant up'
        alias ssh='vagrant ssh'
        alias install='vagrant ssh -c /usr/local/submitty/.setup/INSTALL_SUBMITTY.sh'
        alias is="vagrant ssh -c 'bash /usr/local/submitty/GIT_CHECKOUT/Submitty/.setup/INSTALL_SUBMITTY_HELPER_SITE.sh'"
        alias ws='is && vagrant ssh -c "systemctl restart submitty_websocket_server"'
        alias newbase="vagrant snapshot save base --force"
        alias tobase="vagrant snapshot restore base"
        alias worker="vagrant ssh -c 'systemctl stop submitty_daemon_jobs_handler' && vagrant ssh -c 'bash /usr/local/submitty/GIT_CHECKOUT/Submitty/.setup/INSTALL_SUBMITTY_HELPER_BIN.sh' && vagrant ssh -c 'su -c /usr/local/submitty/sbin/submitty_daemon_jobs/submitty_daemon_jobs.py submitty_daemon' && vagrant ssh -c 'systemctl start submitty_daemon_jobs_handler'"
        alias stan='pushd $HOME/Documents/Programming/Submitty/Submitty/site; php vendor/bin/phpstan --memory-limit=1000000000; popd'
        alias stan-b='pushd $HOME/Documents/Programming/Submitty/Submitty/site; php vendor/bin/phpstan --memory-limit=1000000000 -b; popd'
        alias cs='pushd $HOME/Documents/Programming/Submitty/Submitty/site; php vendor/bin/phpcs; popd'
        alias cbf='pushd $HOME/Documents/Programming/Submitty/Submitty/site; php vendor/bin/phpcbf; popd'
        ;;
    *) ;;
    esac
}

wal -Rq
eval "$(atuin init zsh)"
eval $(thefuck --alias)
